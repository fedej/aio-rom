[tool.poetry]
name = "aio-rom"
version = "0.1.5"
description = "asyncio based Redis object mapper"
authors = ["Federico Jaite <fede_654_87@hotmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "aio_rom"}]
repository = "https://github.com/fedej/aio-rom"
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Database :: Front-Ends",
]
include = ["aio_rom/py.typed"]

[tool.poetry.dependencies]
python = "^3.7"
typing-extensions = ">=4.4.0,<5.0"
redis = "^4.3.4"

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
flake8 = "^5.0.4"
mypy = "^0.982"
pytest = "^7.2.0"
pytest-asyncio = "^0.20.1"
pytest-benchmark = "^4.0.0"
isort = "^5.10.1"
bandit = "^1.7.4"
flake8-bugbear = "^22.10.27"
flake8-comprehensions = "^3.10.1"

[tool.poetry-version-plugin]
source = "git-tag"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.coverage.run]
relative_files = true

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.tox]
legacy_tox_ini = """
[tox]
minversion = 3.7
isolated_build = true
envlist =
    clean
    style
    mypy
    py{37,38,39,310},pypy3
skip_missing_interpreters = true

[gh-actions]
python =
    3.7: clean, py37, style
    3.8: clean, py38, mypy
    3.9: clean, py39
    3.10: clean, py310
    pypy-3: clean, pypy3

[testenv]
deps =
    asynctest; python_version < "3.8"
    pytest
    pytest-asyncio
    pytest-cov
    pytest-benchmark
passenv = CI
extras = mypy
setenv = MYPY_TEST_PREFIX = tests
commands = pytest --cov=aio_rom --cov-append --cov-report=term-missing --cov-branch --cov-report=xml

[testenv:pypy3]
extras =
setenv =
commands = {[testenv]commands} --ignore-glob='*mypy*.py'

[testenv:style]
deps =
    black
    flake8
    flake8-bugbear
    flake8-comprehensions
    bandit
    isort
commands =
    black --check .
    flake8 --max-line-length=88 --ignore=E203,W503,B950 --select=E,W,F,C9,N8,B,B9,C4 .
    bandit -r aio_rom
    isort --check-only .

[testenv:mypy]
deps =
    mypy
    pytest
commands = mypy --install-types --non-interactive --strict aio_rom tests

[testenv:clean]
deps = coverage[toml]
skip_install = true
commands = coverage erase
"""
