[project]
name = "aio-rom"
dynamic = ["version"]
description = "asyncio based Redis object mapper"
authors = [{ name = "fedej", email = "fede_654_87@hotmail.com" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Database :: Front-Ends",
]
dependencies = [
    "typing-extensions>=4.4.0,<5.0.4",
    "redis>=4.3.4,<5.1.0",
    "wrapt>=1.14.1,<2.0.0",
]

[project.urls]
"Source" = "https://github.com/fedej/aio-rom"

[project.optional-dependencies]
dev = [
    "bandit",
    "black",
    "flake8",
    "flake8-bugbear",
    "flake8-comprehensions",
    "isort",
    "mypy",
    "pytest",
    "pytest-asyncio",
    "pytest-benchmark"
]

[tool.hatch.version]
source = "vcs"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.isort]
profile = "black"

[tool.coverage.run]
relative_files = true
branch = true
source_pkgs = ["aio_rom", "tests"]

[tool.coverage.paths]
aio_rom = ["aio_rom"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-asyncio",
    "pytest-benchmark",
    "pytest-cov",
]

[tool.hatch.envs.test.scripts]
no-cov = "pytest --no-cov {args:tests}"
cov = "pytest --cov --cov-report=term-missing --cov-config=pyproject.toml {args:tests}"

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12", "pypy3.8", "pypy3.9", "pypy3.10"]

[tool.hatch.envs.coverage]
detached = true
dependencies = [
    "coverage[toml]",
    "lxml",
]
[tool.hatch.envs.coverage.scripts]
combine = "coverage combine {args}"
report-xml = "coverage xml"

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "bandit",
    "black",
    "flake8",
    "flake8-bugbear",
    "flake8-comprehensions",
    "isort",
    "mypy",
    "pytest",
]

[tool.hatch.envs.lint.scripts]
fmt = [
    "black {args:.}",
    "isort {args:.}",
]
style = [
    "black --check {args:.}",
    "isort --check-only {args:.}",
]
lint = [
    "flake8 --max-line-length=88 --ignore=E203,W503,B950 --select=E,W,F,C9,N8,B,B9,C4 {args:aio_rom tests}",
    "bandit -r {args:aio_rom}",
]
typing = "mypy --install-types --ignore-missing-imports --non-interactive --strict {args:.}"
all = [
    "style",
    "lint",
    "typing"
]
