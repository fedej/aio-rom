[tool.poetry]
name = "aio-rom"
version = "0"
description = "asyncio based Redis object mapper"
authors = ["Federico Jaite <fede_654_87@hotmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "rom"}]
repository = "https://github.com/fedej/aio-rom"
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Database :: Front-Ends"
]
include = ["rom/py.typed"]

[tool.poetry.dependencies]
python = "^3.7"
aioredis = "1.3.1"
typing-extensions = "^3.10.0.0"
mypy = {version = "^0.910", optional = true}

[tool.poetry.dev-dependencies]
black = "^21.7-beta.0"
flake8 = "^3.9.2"
mypy = "^0.910"
pytest = "^6.2.4"
pytest-asyncio = "^0.15.1"
pytest-benchmark = "^3.4.1"
isort = "^5.9.3"

[tool.poetry.extras]
mypy = ["mypy"]

[tool.poetry-version-plugin]
source = "git-tag"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
# py39 is not supported yet
target-version = ["py37", "py38"]

[tool.isort]
profile = "black"

[tool.coverage.run]
relative_files = true

[tool.mypy]
plugins = "rom.mypy"

[tool.tox]
legacy_tox_ini = """
[tox]
minversion = 3.7
isolated_build = true
envlist =
    clean
    style
    mypy
    py37,py38,py39
skip_missing_interpreters = true

[gh-actions]
python =
    3.7: clean, py37, style
    3.8: clean, py38
    3.9: clean, py39

[testenv]
deps =
    asynctest; python_version < "3.8"
    pytest
    pytest-cov
    pytest-asyncio
    pytest-benchmark
passenv = CI
extras = mypy
setenv = MYPY_TEST_PREFIX = tests
commands = pytest --cov=rom --cov-append --cov-report=term-missing --cov-branch --cov-report=xml

[testenv:style]
deps =
    black
    flake8
    isort
commands =
    black --check .
    flake8 --max-line-length=88 --ignore=E203,W503 .
    isort --check-only .

[testenv:mypy]
deps = mypy
commands = mypy --install-types --non-interactive --strict rom

[testenv:clean]
deps = coverage[toml]
skip_install = true
commands = coverage erase
"""