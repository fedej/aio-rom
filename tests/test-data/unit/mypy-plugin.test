[case testModelIsDataClass]
# flags: --strict
from typing import Optional

from aio_rom import Model

class User(Model):
    name: str

oi: Optional[int]

User(1)  # E: Missing positional argument "name" in call to "User"
User(1, "blah")
User(1, 2)  # E: Argument 2 to "User" has incompatible type "int"; expected "str"
User(id=int(), name=str())
User(id=oi, name="")  # E: Argument "id" to "User" has incompatible type "Optional[int]"; expected "Union[int, Union[bytes, str, memoryview]]"
reveal_type(User.NotFoundException)  # N: Revealed type is "Type[aio_rom.exception.ModelNotFoundException]"
reveal_type(User.NotFoundException())  # N: Revealed type is "aio_rom.exception.ModelNotFoundException"
